{"layout":"post","title":"How to overwrite Backbone Model save function","categories":["articles"],"tags":["Backbone",null,"Javascript","Rest","Drupal"],"body":"<p><img style=\"float:left; margin-right: 20px;;\" src=\"{{site.url }}/assets/img/backbonejs-logo-small.png\"/> <a href=\"http://backbonejs.org\" target=\"_blank\">Backbone JS</a> enables you to create a JS application to connect with your existing API over a RESTful JSON interface.</p>\n<p>Backbone define some <a href=\"http://es.wikipedia.org/wiki/Representational_State_Transfer\" target=\"_blank\">REST</a> states to operate over models for instance:</p>\n<ul>\n<li>Model Fetch: <strong>GET</strong></li>\n<li>Model New: <strong>POST</strong></li>\n<li>Model Update: <strong>PUT</strong></li>\n</ul>\n<p>But is possible our API doesn’t implement all REST States, for instance <a href=\"http://www.drupal.org\" target=\"_blank\">Drupal</a> 8 (version in development) don’t implement the method PUT to save Drupal Entities yet.</p>\n<p>In exchange the REST State PATCH is used by Drupal to save models.</p>\n<p>So if I try to create a regular Model as you can see in the following snippet.</p>\n<pre><code>Node = Backbone.Model.extend({\n        initialize: function(){\n            alert(&quot;Welcome to this world&quot;);\n        }\n    });\n\nvar node = new Node({ id: 1, title: &#39;Node Sample in Backbone&#39;});\n\nnode.save(userDetails, {\n    success: function (user) {\n        alert(user.toJSON());\n    }\n})\n</code></pre><p>The code above will execute an Ajax call using PUT method.</p>\n<p>If you are a Drupal Developer you will notice the model doesn’t match the Drupal Entity structure with language and deltas, but I just want to show a simply logic about Backbone save.</p>\n<p>Now let me show you how we can overwrite the save function to change the REST method.</p>\n<pre><code>Node = Backbone.Model.extend({\n        initialize: function(){\n            alert(&quot;Welcome to this world&quot;);\n        },\n        save: function(attrs, options) {\n          options.patch = true;\n          // Proxy the call to the original save function\n          Backbone.Model.prototype.save.call(this, attrs, options);\n        }\n    });\n\nvar node = new Node({ id: 1, title: &#39;Node Sample in Backbone&#39;});\n\nnode.save(userDetails, {\n    success: function (user) {\n        alert(user.toJSON());\n    }\n})\n</code></pre><p>Now our model will execute and Ajax request using PATCH method.</p>\n<p>I used this technique to enable the library <a href=\"https://github.com/enzolutions/backbone.drupal\" target=\"_blank\">Backbone.Drupal</a> send models to Drupal 8 using REST method PATCH.</p>\n<p>I hope you found this blog entry useful.</p>\n","updatedAt":"2017-09-05T17:40:56.000Z"}
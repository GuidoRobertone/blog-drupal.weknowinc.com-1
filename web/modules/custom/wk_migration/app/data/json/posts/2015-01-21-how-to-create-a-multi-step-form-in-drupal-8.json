{"layout":"post","title":"How to create a Multi Step Form in Drupal 8","categories":["articles"],"tags":["Drupal","Drupal 8"],"body":"<p>Last weekend I organize and participate in the initiative of <a href=\"http://drupal.org\" target=\"_blank\">Drupal</a> Community <a href=\"http://www.anexusit.com/blog/drupal-sprint-weekend-costa-rica\" target=\"_blank\">Global Sprint Weekend</a> with a location in Costa Rica.</p>\n<p>Among talks and contributions I found a interesting request in Drupal 8 and I want to share with my the implementation.</p>\n<p>I want to create a Multi Step Form, because Drupal 8 doesn’t have an official release yet there are many stuff we easily do in Drupal 7 but now in some way to need to learn again how to solve our problems in a different way or Drupal/Symfony Style.</p>\n<p>I will create a Multi Step Form to enable users to find a car providing Year, Body Style and Gas Mileage.</p>\n<p>#Create a Module</p>\n<p>I will skip the explanation about how to create the Module <strong>multi_step_form</strong> in Drupal 8 because could be generated using the project <a href=\"http://drupalconsole.com/\" target=\"_blank\">Drupal Console</a> executing the following command.</p>\n<pre><code>$ drupal generate:module\n</code></pre><p>After generate the module we will use another command to add a Form with properties required as you can see below</p>\n<pre><code>$ drupal generate:form:config\n</code></pre><p>As result we will get a form with a method <strong>buildForm</strong> like this</p>\n<pre><code>/**\n * {@inheritdoc}\n */\npublic function buildForm(array $form, FormStateInterface $form_state) {\n\n  $config = $this-&gt;config(&#39;multi_step.multi_step_form_config&#39;);\n\n  $form[&#39;model&#39;] = [\n    &#39;#type&#39; =&gt; &#39;select&#39;,\n    &#39;#title&#39; =&gt; $this-&gt;t(&#39;Model&#39;),\n    &#39;#description&#39; =&gt; $this-&gt;t(&#39;&#39;),\n          &#39;#options&#39; =&gt; array(&#39;1997&#39;, &#39;1998&#39;, &#39;1999&#39;, &#39;2000&#39;, &#39;2001&#39;, &#39;2002&#39;, &#39;2003&#39;, &#39;2004&#39;, &#39;2005&#39;, &#39;2006&#39;, &#39;2007&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;, &#39;2012&#39;, &#39;2013&#39;, &#39;2014&#39;, &#39;2015&#39;),\n          &#39;#default_value&#39; =&gt; $config-&gt;get(&#39;model&#39;),\n  ];\n\n  $form[&#39;body_style&#39;] = [\n    &#39;#type&#39; =&gt; &#39;checkboxes&#39;,\n    &#39;#title&#39; =&gt; $this-&gt;t(&#39;Body Style&#39;),\n    &#39;#description&#39; =&gt; $this-&gt;t(&#39;&#39;),\n          &#39;#options&#39; =&gt; array(&#39;Coupe&#39;, &#39;Sedan&#39;, &#39;Convertible&#39;, &#39;Hatchbac&#39;, &#39;Station wagon&#39;, &#39;SUV&#39;, &#39;Minivan&#39;, &#39;Full-size van&#39;, &#39;Pick-up&#39;),\n          &#39;#default_value&#39; =&gt; $config-&gt;get(&#39;body_style&#39;),\n  ];\n\n  $form[&#39;gas_mileage&#39;] = [\n    &#39;#type&#39; =&gt; &#39;radios&#39;,\n    &#39;#title&#39; =&gt; $this-&gt;t(&#39;Gas Mileage&#39;),\n    &#39;#description&#39; =&gt; $this-&gt;t(&#39;&#39;),\n          &#39;#options&#39; =&gt; array(&#39;20 mpg or less&#39;, &#39;21 mpg or more&#39;, &#39;26 mpg or more&#39;, &#39;31 mpg or more&#39;, &#39;36 mpg or more&#39;, &#39;41 mpg or more&#39;),\n          &#39;#default_value&#39; =&gt; $config-&gt;get(&#39;gas_mileage&#39;),\n  ];\n\n  return parent::buildForm($form, $form_state);\n\n}\n</code></pre><p>##Define step property</p>\n<p>Inside the Form class we need to a protected property to store the current step of Multi Step,check the following snippet.</p>\n<pre><code>class MultiStepForm extends ConfigFormBase\n {\n\n  protected $step = 1;\n</code></pre><h2 id=\"get-parent-form\">Get parent form</h2>\n<p>Instead of call parent functon <strong>buildForm</strong> at the end I will call at the beginning to modify the form before the form is render.</p>\n<pre><code>/**\n * {@inheritdoc}\n */\npublic function buildForm(array $form, FormStateInterface $form_state) {\n  $form = parent::buildForm($form, $form_state);\n</code></pre><h2 id=\"filter-form-elements-by-step\">Filter form elements by step</h2>\n<p>Now we need filter what elements of form will be rendered based in step value, as you can see in following snippet.</p>\n<pre><code>if($this-&gt;step == 1) {\n  $form[&#39;model&#39;] = [\n    &#39;#type&#39; =&gt; &#39;select&#39;,\n    &#39;#title&#39; =&gt; $this-&gt;t(&#39;Model&#39;),\n    &#39;#description&#39; =&gt; $this-&gt;t(&#39;&#39;),\n          &#39;#options&#39; =&gt; array(&#39;1997&#39;, &#39;1998&#39;, &#39;1999&#39;, &#39;2000&#39;, &#39;2001&#39;, &#39;2002&#39;, &#39;2003&#39;, &#39;2004&#39;, &#39;2005&#39;, &#39;2006&#39;, &#39;2007&#39;, &#39;2008&#39;, &#39;2009&#39;, &#39;2010&#39;, &#39;2011&#39;, &#39;2012&#39;, &#39;2013&#39;, &#39;2014&#39;, &#39;2015&#39;),\n          &#39;#default_value&#39; =&gt; $config-&gt;get(&#39;model&#39;),\n  ];\n}\n</code></pre><h2 id=\"change-submit-label\">Change submit label</h2>\n<p>Now we need alter the label of submit button to inform end user that there is a next step or if we reach the end of multi step.</p>\n<p>In our case we only have 3 steps and the code will be like this</p>\n<pre><code>if($this-&gt;step &lt; 3) {\n  $button_label = $this-&gt;t(&#39;Next&#39;);\n}\nelse {\n  $button_label = $this-&gt;t(&#39;Find a Car&#39;);\n}\n\n$form[&#39;actions&#39;][&#39;submit&#39;][&#39;#value&#39;] = $button_label;\n\nreturn $form;\n</code></pre><h2 id=\"enable-multi-step\">Enable Multi Step</h2>\n<p>At the end we need enable the Multi Step Form behaviour, to do this is necessary modify the method <strong>submitForm</strong> forcing Form Rebuild if we don’t reach yet the last step of Multi Step using the method <a href=\"https://api.drupal.org/api/drupal/core!lib!Drupal!Core!Form!FormState.php/function/FormState%3A%3AsetRebuild/8\" target=\"_blank\">setRebuild()</a> part of <a href=\"https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Form%21FormState.php/class/FormState/8\" target=\"_blank\">Form State</a>.</p>\n<p>The submitForm method will be similar to following code</p>\n<pre><code>/**\n * {@inheritdoc}\n */\npublic function submitForm(array &amp;$form, FormStateInterface $form_state) {\n  if($this-&gt;step &lt; 3) {\n    $form_state-&gt;setRebuild();\n    $this-&gt;step++;\n  }\n  else {\n    parent::submitForm($form, $form_state);\n    /*$this-&gt;config(&#39;multi_step.multi_step_form_config&#39;)\n          -&gt;set(&#39;model&#39;, $form_state-&gt;getValue(&#39;model&#39;))\n          -&gt;set(&#39;body_style&#39;, $form_state-&gt;getValue(&#39;body_style&#39;))\n          -&gt;set(&#39;gas_mileage&#39;, $form_state-&gt;getValue(&#39;gas_mileage&#39;))\n        -&gt;save();*/\n  }\n}\n</code></pre><p>If you want test a full implementation of Multi Step you can download the module <a href=\"https://github.com/enzolutions/drupal8_multi_step_form\" target=\"_blank\">drupal8_multi_step_form</a>.</p>\n<p>I hope you found this blog entry useful.</p>\n","updatedAt":"2017-09-05T17:40:56.000Z"}
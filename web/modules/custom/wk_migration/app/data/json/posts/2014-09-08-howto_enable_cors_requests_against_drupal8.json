{"layout":"post","title":"How to enable CORS requests against Drupal 8","description":"Explanaition to enable CORS request against Drupal 8 using .htacess","categories":["articles"],"tags":["CORS","Drupal",".htacess"],"draft":false,"body":"<p>#The Problem</p>\n<p>Nowadays I was creating a new version of my library <a target=\"_blank\" href=\"https://github.com/enzolutions/backbone.drupal\">https://github.com/enzolutions/backbone.drupal</a> to enable to use Drupal 8 in mode <strong>Headless Drupal</strong> using front end in a different domain or subdomain.</p>\n<p>The problem I found with <a href=\"{{site.url}}/articles/2014/05/31/what-is-cross-origin-resource-sharing-cors/\">CORS</a> requests is related with the way jQuery execute the first request Ajax, because before to do an execution of a GET|PUT|DELETE|POST|PATCH request an <a target=\"_blank\" href=\"http://restpatterns.org/HTTP_Methods/OPTIONS\">OPTIONS</a> request is executed to validate request methods accepted for backend server more information at <a href=\"http://api.jquery.com/jquery.ajax/\">http://api.jquery.com/jquery.ajax/</a> in <strong>contentType</strong> section.</p>\n<p>The current status of Rest module (part of Drupal Core) doesn’t implement the OPTIONS method, so my first approach was implement that method in class <strong>Drupal\\rest\\Plugin\\rest\\resource\\EntityResource</strong> using the following code</p>\n<pre><code>public function options(EntityInterface $entity) {\n   $response = new ResourceResponse();\n   $response-&gt;setStatusCode(ResourceResponse::HTTP_OK);\n   $response-&gt;headers-&gt;set(&#39;Allow&#39;, &#39;GET,POST,PATCH,DELETE,OPTIONS&#39;);\n   return $response-&gt;send();\n  }\n</code></pre><p>After add that extra function in class <strong>EntityResource</strong> the method was available and double checked with module <a target=\"_blank\" href=\"https://www.drupal.org/project/restui\">RestUI</a>, but this solution wasn’t enough because I can’t enable OPTIONS method without authentication and jQuery trigger the OPTIONS method without CRC Token or Basic Auth method even if you provide in the original call.</p>\n<p>#The Solution</p>\n<p>In order to resolve the problem I use .htaccess and Apache <a target=\"_blank\" href=\"http://httpd.apache.org/docs/current/mod/mod_rewrite.html\">mod_rewrite</a> to enable CORS and intercept the OPTIONS request to avoid Drupal reject the request because doesn’t have the proper credentials, I did a patch for Drupal 8 and you can download the patch <a target=\"_blank\" href=\"https://www.drupal.org/files/issues/core-cors-headers-1869548-26.patch\">here</a>.</p>\n<p>But let me explain the changes introduced in my patch.</p>\n<p>##Intercept OPTIONS Request</p>\n<p>I add a Mod Rewrite Condition and Rule to avoid all OPTIONS request be processed by Drupal and rejected, instead of a <a target=\"_blank\" href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success\">HTTP 200 OK</a> code is returned in order to enable jQuery request continue with the normal workflow.</p>\n<p>Check the code below.</p>\n<pre><code>RewriteCond %{REQUEST_METHOD} OPTIONS\nRewriteRule .* / [R=200,L]\n</code></pre><p>##Enable CORS\nIf you search how to enable CORS using .htaccess you will find tons of similar information and this information usually works, but in our case we have a special situation the intercept process we implemented above.</p>\n<p>Because the interception the normal statements to enable CORS doesn’t work and apache will reject our request, to resolve this problem I found the condition <a target=\"_blank\" href=\"http://httpd.apache.org/docs/2.0/mod/mod_headers.html\">always</a> for Header directive.</p>\n<p>Check the implementation below.</p>\n<pre><code>Header always set Access-Control-Allow-Origin &quot;*&quot;\nHeader always set Access-Control-Allow-Methods &quot;POST, GET, OPTIONS, PATCH, DELETE&quot;\nHeader always set Access-Control-Allow-Headers: Authorization\n</code></pre><p>I strongly recommend to change <strong>*</strong> for your frontend domain i.e frontend-example.com.</p>\n<p>I expect you have found this entry useful.</p>\n","updatedAt":"2017-09-05T17:40:56.000Z"}
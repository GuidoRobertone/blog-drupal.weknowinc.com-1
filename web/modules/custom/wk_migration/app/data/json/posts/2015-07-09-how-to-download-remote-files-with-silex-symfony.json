{"layout":"post","title":"How to download remote files with Silex/Symfony and Drupal 8","categories":["articles"],"tags":["Guzzle","Silex","Symfony","Zip","Drupal"],"body":"<p>As a new developer of Silex/Symfony, I found really excited some components available to use with <a href=\"http://silex.sensiolabs.org/\">Silex</a> and <a href=\"symfony.com\">Symfony</a>. Today\nI want to talk about <a href=\"https://github.com/guzzle/guzzle\">Guzzle</a> and <a href=\"https://github.com/alchemy-fr/Zippy\">Zippy</a>, I am going to show you how to use both \nto download and handle remote zip/gz files in your application.</p>\n<p>#Installing with composer.</p>\n<p>Firstly, we need to add the dependency in our <strong>composer.json</strong> file as you can see in the following snippet.</p>\n<pre><code>{\n    &quot;require&quot;: {\n        &quot;guzzlehttp/guzzle&quot;: &quot;~6.1.1&quot;,\n        &quot;alchemy/zippy&quot;: &quot;0.2.*@dev&quot;\n    }\n}\n</code></pre><p>After include these new dependencies you must to run the composer update as you can see in the following bash sentence.</p>\n<pre><code>$ composer update\n</code></pre><p>#Usage</p>\n<p>With those new vendors, you only need to use the, as you can see in the following code.</p>\n<pre><code>&lt;?php\n\nuse Alchemy\\Zippy\\Zippy;\nuse GuzzleHttp\\Client;\nuse Symfony\\Component\\Filesystem\\Filesystem;\nuse Symfony\\Component\\Filesystem\\Exception\\IOExceptionInterface;\n</code></pre><p>Now inside any method of your class is possible to request to create a client of Guzzle, in general terms Guzzle is like a \nheadless browser.</p>\n<pre><code>$client =  new Client();\n\n// Destination file to download the release\n$destination = tempnam(sys_get_temp_dir(), &#39;file.&#39;) . &quot;tar.gz&quot;;\n\n// Get and save file\n$client-&gt;get($remote_zip_file_path, [&#39;save_to&#39; =&gt; $destination]);\n\n// Handle Zip file to extract in your system\n$zippy = Zippy::load();\n$archive = $zippy-&gt;open($destination);\n$archive-&gt;extract(&#39;./&#39;);\n\ntry {\n  $fs = new Filesystem();\n  $fs-&gt;rename($remote_zip_file_name, &#39;./&#39; . $new_folder_name);\n} catch (IOExceptionInterface $e) {\n  print &#39;Error renaming folder&#39;;\n}\n</code></pre><p>In the code above we are assuming we have the path to file and name and we want to rename the folder after extract, the code \nalso could be improved include a try catch section for extract process.</p>\n<p>As you can see is complex task like that normally is handle by CURL but as you can see Guzzle is more powerful and his implementation is easier to understand.</p>\n<p>#Drupal usage.</p>\n<p>Because now <a href=\"http://drupal.org\">Drupal</a> 8 include several Symfony components and other useful components, the code above could be rewrite \nusing Drupal 8 wrapper, let me show you the implementation.</p>\n<pre><code>use Drupal\\Core\\Archiver\\ArchiveTar;\nuse Symfony\\Component\\Filesystem\\Filesystem;\nuse Symfony\\Component\\Filesystem\\Exception\\IOExceptionInterface;\n</code></pre><pre><code>$client =  new Drupal::httpClient();\n\n// Destination file to download the release\n$destination = tempnam(sys_get_temp_dir(), &#39;file.&#39;) . &quot;tar.gz&quot;;\n\n// Get and save file\n$client-&gt;get($remote_zip_file_path, [&#39;save_to&#39; =&gt; $destination]);\n\n// Handle Zip file to extract in your system\n$archiver = new ArchiveTar($destination, &#39;gz&#39;);\n$archiver-&gt;extract(&#39;./&#39;);\nfclose($destination . &#39;.tar.gz&#39;);\n\ntry {\n  $fs = new Filesystem();\n  $fs-&gt;rename($remote_zip_file_name, &#39;./&#39; . $new_folder_name);\n} catch (IOExceptionInterface $e) {\n  print &#39;Error renaming folder&#39;;\n}\n</code></pre><p>As you can see is similar and we donâ€™t have to modify the Drupal 8 composer.json file, to include components because they are\nalready included in Drupal 8 core.</p>\n<p>If you want to check a complete implementation of this logic, you can check the source code of <a href=\"http://drupalconsole.com\">Drupal Console</a> project commands \n<a href=\"https://github.com/hechoendrupal/DrupalConsole/blob/master/src/Command/Module/DownloadCommand.php\">module:download</a> and <a href=\"https://github.com/hechoendrupal/DrupalConsole/blob/master/src/Command/Site/NewCommand.php\">site:new</a></p>\n<p>I hope you found this article useful.</p>\n","updatedAt":"2017-09-05T17:40:56.000Z"}